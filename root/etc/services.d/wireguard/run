#!/usr/bin/with-contenv bash

readonly AUTO_FIND=$([[ -z "${PUBLIC_KEY}" || -z "${END_POINT}" ]] && echo "true" || echo "false")
readonly PRIVATE_KEY=$([[ -z "${PRIVATE_KEY}" && -f "${PRIVATE_KEY_FILE}" ]] && head -n 1 "${PRIVATE_KEY_FILE}" || echo "${PRIVATE_KEY}")
readonly RECOMMENDATIONS_API_URL="https://api.nordvpn.com/v1/servers/recommendations"

snooze() {
  sleep "${RECONNECT_TIME:-infinity}" &
  local pid=$!
  wait $pid
  local retval=$?
  [ $retval -eq 0 ] || kill $pid && return $retval
}

set_server() {
  echo "Finding the best server..."
  local recommendations=$(curl --retry "${SERVER_LOOKUP_RETRIES:-3}" -fsSL "${RECOMMENDATIONS_API_URL}?filters\[servers_technologies\]\[identifier\]=wireguard_udp&limit=1&${QUERY}")

  if [[ $? -ne 0 || -z "${recommendations}" ]]; then
    echo "Unable to find a server." 1>&2
    snooze
    exit 1
  else
    local hostname=$(jq -r '.[0].hostname' <<< "${recommendations}")
    echo "Found ${hostname}"
  fi

  PUBLIC_KEY=$(jq -r '.[0].technologies[] | select( .identifier == "wireguard_udp" ) | .metadata[] | select( .name == "public_key" ) | .value' <<< "${recommendations}")
  END_POINT=$(jq -r '.[0].station' <<< "${recommendations}"):51820
}

reconnect() {
  if [ "${HOT_RECONNECT}" != "true" ]; then
    exit 0
  fi

  if [ "${AUTO_FIND}" = "true" ]; then
    set_server
  fi

  echo "Setting endpoint ${END_POINT}..."
  wg set wg0 peer "${PUBLIC_KEY}" endpoint "${END_POINT}" || exit 2

  echo "Status:"
  wg show wg0
}

if [ "${AUTO_FIND}" = "true" ]; then
 set_server
fi

echo "Connecting to ${END_POINT}..."
(
  umask 077
  cat >/etc/wireguard/wg0.conf <<EOF
[Interface]
PrivateKey = ${PRIVATE_KEY}
ListenPort = ${LISTEN_PORT:-51820}
Address = ${ADDRESS:-10.5.0.2/32}
DNS = ${DNS:-103.86.96.100, 103.86.99.100}
Table = ${TABLE:-auto}
PreUp = ${PRE_UP}
PostUp = ${POST_UP}
PreDown = ${PRE_DOWN}
PostDown = ${POST_DOWN}

[Peer]
Endpoint = ${END_POINT}
PublicKey = ${PUBLIC_KEY}
AllowedIPs = ${ALLOWED_IPS:-0.0.0.0/0}
PersistentKeepalive = ${PERSISTENT_KEEP_ALIVE:-25}
EOF
)
wg-quick up wg0

echo "Status:"
wg show wg0

trap : HUP TERM INT

while true; do
  snooze

  case $? in
    0|129) reconnect ;;
    *) exit $? ;;
  esac
done
